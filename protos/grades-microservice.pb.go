// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: grades-microservice.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SemesterTerm represents the semester.
type SemesterTerm int32

const (
	SemesterTerm_SEMESTER_TERM_UNSPECIFIED SemesterTerm = 0
	SemesterTerm_SEMESTER_TERM_FALL        SemesterTerm = 1
	SemesterTerm_SEMESTER_TERM_SPRING      SemesterTerm = 2
)

// Enum value maps for SemesterTerm.
var (
	SemesterTerm_name = map[int32]string{
		0: "SEMESTER_TERM_UNSPECIFIED",
		1: "SEMESTER_TERM_FALL",
		2: "SEMESTER_TERM_SPRING",
	}
	SemesterTerm_value = map[string]int32{
		"SEMESTER_TERM_UNSPECIFIED": 0,
		"SEMESTER_TERM_FALL":        1,
		"SEMESTER_TERM_SPRING":      2,
	}
)

func (x SemesterTerm) Enum() *SemesterTerm {
	p := new(SemesterTerm)
	*p = x
	return p
}

func (x SemesterTerm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SemesterTerm) Descriptor() protoreflect.EnumDescriptor {
	return file_grades_microservice_proto_enumTypes[0].Descriptor()
}

func (SemesterTerm) Type() protoreflect.EnumType {
	return &file_grades_microservice_proto_enumTypes[0]
}

func (x SemesterTerm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SemesterTerm.Descriptor instead.
func (SemesterTerm) EnumDescriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{0}
}

// Semester represents the semester.
type Semester struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          SemesterTerm           `protobuf:"varint,1,opt,name=term,proto3,enum=grades.SemesterTerm" json:"term,omitempty"`
	Year          int32                  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Semester) Reset() {
	*x = Semester{}
	mi := &file_grades_microservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Semester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Semester) ProtoMessage() {}

func (x *Semester) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Semester.ProtoReflect.Descriptor instead.
func (*Semester) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{0}
}

func (x *Semester) GetTerm() SemesterTerm {
	if x != nil {
		return x.Term
	}
	return SemesterTerm_SEMESTER_TERM_UNSPECIFIED
}

func (x *Semester) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

// SingleGrade is a single grade message.
type SingleGrade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semester      *Semester              `protobuf:"bytes,1,opt,name=semester,proto3" json:"semester,omitempty"`
	GradeId       string                 `protobuf:"bytes,2,opt,name=gradeId,proto3" json:"gradeId,omitempty"`
	StudentId     string                 `protobuf:"bytes,3,opt,name=studentId,proto3" json:"studentId,omitempty"`
	CourseId      string                 `protobuf:"bytes,4,opt,name=courseId,proto3" json:"courseId,omitempty"`
	GradeType     string                 `protobuf:"bytes,5,opt,name=gradeType,proto3" json:"gradeType,omitempty"`
	ItemId        string                 `protobuf:"bytes,6,opt,name=itemId,proto3" json:"itemId,omitempty"`
	GradeValue    string                 `protobuf:"bytes,7,opt,name=gradeValue,proto3" json:"gradeValue,omitempty"`
	GradedBy      string                 `protobuf:"bytes,8,opt,name=gradedBy,proto3" json:"gradedBy,omitempty"`
	Comments      string                 `protobuf:"bytes,9,opt,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleGrade) Reset() {
	*x = SingleGrade{}
	mi := &file_grades_microservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleGrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleGrade) ProtoMessage() {}

func (x *SingleGrade) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleGrade.ProtoReflect.Descriptor instead.
func (*SingleGrade) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{1}
}

func (x *SingleGrade) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *SingleGrade) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *SingleGrade) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *SingleGrade) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *SingleGrade) GetGradeType() string {
	if x != nil {
		return x.GradeType
	}
	return ""
}

func (x *SingleGrade) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *SingleGrade) GetGradeValue() string {
	if x != nil {
		return x.GradeValue
	}
	return ""
}

func (x *SingleGrade) GetGradedBy() string {
	if x != nil {
		return x.GradedBy
	}
	return ""
}

func (x *SingleGrade) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

// AddSingleGradeRequest is a request message to add a single grade for a student in a course.
type AddSingleGradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Semester      *Semester              `protobuf:"bytes,2,opt,name=semester,proto3" json:"semester,omitempty"`
	GradeId       string                 `protobuf:"bytes,3,opt,name=gradeId,proto3" json:"gradeId,omitempty"`
	StudentId     string                 `protobuf:"bytes,4,opt,name=studentId,proto3" json:"studentId,omitempty"`
	CourseId      string                 `protobuf:"bytes,5,opt,name=courseId,proto3" json:"courseId,omitempty"`
	GradeType     string                 `protobuf:"bytes,6,opt,name=gradeType,proto3" json:"gradeType,omitempty"`
	ItemId        string                 `protobuf:"bytes,7,opt,name=itemId,proto3" json:"itemId,omitempty"`
	GradeValue    string                 `protobuf:"bytes,8,opt,name=gradeValue,proto3" json:"gradeValue,omitempty"`
	GradedBy      string                 `protobuf:"bytes,9,opt,name=gradedBy,proto3" json:"gradedBy,omitempty"`
	Comments      string                 `protobuf:"bytes,10,opt,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSingleGradeRequest) Reset() {
	*x = AddSingleGradeRequest{}
	mi := &file_grades_microservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSingleGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSingleGradeRequest) ProtoMessage() {}

func (x *AddSingleGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSingleGradeRequest.ProtoReflect.Descriptor instead.
func (*AddSingleGradeRequest) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{2}
}

func (x *AddSingleGradeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddSingleGradeRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *AddSingleGradeRequest) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *AddSingleGradeRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *AddSingleGradeRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *AddSingleGradeRequest) GetGradeType() string {
	if x != nil {
		return x.GradeType
	}
	return ""
}

func (x *AddSingleGradeRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *AddSingleGradeRequest) GetGradeValue() string {
	if x != nil {
		return x.GradeValue
	}
	return ""
}

func (x *AddSingleGradeRequest) GetGradedBy() string {
	if x != nil {
		return x.GradedBy
	}
	return ""
}

func (x *AddSingleGradeRequest) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

// AddSingleGradeResponse is a response message to add a single grade for a specific student in a specific course for a specific semester.
type AddSingleGradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grade         *SingleGrade           `protobuf:"bytes,1,opt,name=grade,proto3" json:"grade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSingleGradeResponse) Reset() {
	*x = AddSingleGradeResponse{}
	mi := &file_grades_microservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSingleGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSingleGradeResponse) ProtoMessage() {}

func (x *AddSingleGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSingleGradeResponse.ProtoReflect.Descriptor instead.
func (*AddSingleGradeResponse) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{3}
}

func (x *AddSingleGradeResponse) GetGrade() *SingleGrade {
	if x != nil {
		return x.Grade
	}
	return nil
}

// GetStundetCourseGradesRequest is a request message to get all grades for a student in a specific course for a specific semester.
type GetStudentCourseGradesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Semester      *Semester              `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	StudentId     string                 `protobuf:"bytes,4,opt,name=studentId,proto3" json:"studentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentCourseGradesRequest) Reset() {
	*x = GetStudentCourseGradesRequest{}
	mi := &file_grades_microservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentCourseGradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseGradesRequest) ProtoMessage() {}

func (x *GetStudentCourseGradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseGradesRequest.ProtoReflect.Descriptor instead.
func (*GetStudentCourseGradesRequest) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudentCourseGradesRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetStudentCourseGradesRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetStudentCourseGradesRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *GetStudentCourseGradesRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

// GetStudentCourseGradesResponse is a response message to get all grades for a student in a specific course for a specific semester.
type GetStudentCourseGradesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grades        []*SingleGrade         `protobuf:"bytes,1,rep,name=grades,proto3" json:"grades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentCourseGradesResponse) Reset() {
	*x = GetStudentCourseGradesResponse{}
	mi := &file_grades_microservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentCourseGradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseGradesResponse) ProtoMessage() {}

func (x *GetStudentCourseGradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseGradesResponse.ProtoReflect.Descriptor instead.
func (*GetStudentCourseGradesResponse) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{5}
}

func (x *GetStudentCourseGradesResponse) GetGrades() []*SingleGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

// UpdateSingleGradeRequest is a request message to update a single grade for a specific student in a specific course for a specific semester.
type UpdateSingleGradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Semester      *Semester              `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	StudentId     string                 `protobuf:"bytes,4,opt,name=studentId,proto3" json:"studentId,omitempty"`
	GradeId       string                 `protobuf:"bytes,5,opt,name=gradeId,proto3" json:"gradeId,omitempty"`
	GradeValue    string                 `protobuf:"bytes,6,opt,name=gradeValue,proto3" json:"gradeValue,omitempty"`
	GradedBy      string                 `protobuf:"bytes,7,opt,name=gradedBy,proto3" json:"gradedBy,omitempty"`
	Comments      string                 `protobuf:"bytes,8,opt,name=comments,proto3" json:"comments,omitempty"`
	GradeType     string                 `protobuf:"bytes,9,opt,name=gradeType,proto3" json:"gradeType,omitempty"`
	ItemId        string                 `protobuf:"bytes,10,opt,name=itemId,proto3" json:"itemId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSingleGradeRequest) Reset() {
	*x = UpdateSingleGradeRequest{}
	mi := &file_grades_microservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSingleGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleGradeRequest) ProtoMessage() {}

func (x *UpdateSingleGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleGradeRequest.ProtoReflect.Descriptor instead.
func (*UpdateSingleGradeRequest) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSingleGradeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *UpdateSingleGradeRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetGradeValue() string {
	if x != nil {
		return x.GradeValue
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetGradedBy() string {
	if x != nil {
		return x.GradedBy
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetGradeType() string {
	if x != nil {
		return x.GradeType
	}
	return ""
}

func (x *UpdateSingleGradeRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

// UpdateSingleGradeResponse is a response message to update a single grade for a specific student in a specific course for a specific semester.
type UpdateSingleGradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grade         *SingleGrade           `protobuf:"bytes,1,opt,name=grade,proto3" json:"grade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSingleGradeResponse) Reset() {
	*x = UpdateSingleGradeResponse{}
	mi := &file_grades_microservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSingleGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSingleGradeResponse) ProtoMessage() {}

func (x *UpdateSingleGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSingleGradeResponse.ProtoReflect.Descriptor instead.
func (*UpdateSingleGradeResponse) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSingleGradeResponse) GetGrade() *SingleGrade {
	if x != nil {
		return x.Grade
	}
	return nil
}

// RemoveSingleGradeRequest is a request message to remove a single grade for a specific student in a specific course for a specific semester.
type RemoveSingleGradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Semester      *Semester              `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	StudentId     string                 `protobuf:"bytes,4,opt,name=studentId,proto3" json:"studentId,omitempty"`
	GradeId       string                 `protobuf:"bytes,5,opt,name=gradeId,proto3" json:"gradeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSingleGradeRequest) Reset() {
	*x = RemoveSingleGradeRequest{}
	mi := &file_grades_microservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSingleGradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSingleGradeRequest) ProtoMessage() {}

func (x *RemoveSingleGradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSingleGradeRequest.ProtoReflect.Descriptor instead.
func (*RemoveSingleGradeRequest) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveSingleGradeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RemoveSingleGradeRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *RemoveSingleGradeRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *RemoveSingleGradeRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *RemoveSingleGradeRequest) GetGradeId() string {
	if x != nil {
		return x.GradeId
	}
	return ""
}

// RemoveSingleGradeResponse is a response message to remove a single grade for a specific student in a specific course for a specific semester.
type RemoveSingleGradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSingleGradeResponse) Reset() {
	*x = RemoveSingleGradeResponse{}
	mi := &file_grades_microservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSingleGradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSingleGradeResponse) ProtoMessage() {}

func (x *RemoveSingleGradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSingleGradeResponse.ProtoReflect.Descriptor instead.
func (*RemoveSingleGradeResponse) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveSingleGradeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetCourseGradesRequest is a request message to get all students grades for a specific course for a specific semester.
type GetCourseGradesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CourseId      string                 `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Semester      *Semester              `protobuf:"bytes,3,opt,name=semester,proto3" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCourseGradesRequest) Reset() {
	*x = GetCourseGradesRequest{}
	mi := &file_grades_microservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCourseGradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseGradesRequest) ProtoMessage() {}

func (x *GetCourseGradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseGradesRequest.ProtoReflect.Descriptor instead.
func (*GetCourseGradesRequest) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{10}
}

func (x *GetCourseGradesRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetCourseGradesRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *GetCourseGradesRequest) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

// GetCourseGradesResponse is a response message to get all students grades for a specific course for a specific semester.
type GetCourseGradesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grades        []*SingleGrade         `protobuf:"bytes,1,rep,name=grades,proto3" json:"grades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCourseGradesResponse) Reset() {
	*x = GetCourseGradesResponse{}
	mi := &file_grades_microservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCourseGradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseGradesResponse) ProtoMessage() {}

func (x *GetCourseGradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grades_microservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseGradesResponse.ProtoReflect.Descriptor instead.
func (*GetCourseGradesResponse) Descriptor() ([]byte, []int) {
	return file_grades_microservice_proto_rawDescGZIP(), []int{11}
}

func (x *GetCourseGradesResponse) GetGrades() []*SingleGrade {
	if x != nil {
		return x.Grades
	}
	return nil
}

var File_grades_microservice_proto protoreflect.FileDescriptor

var file_grades_microservice_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x72, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x9d, 0x02,
	0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbd, 0x02,
	0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a,
	0x16, 0x41, 0x64, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0xc0, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0xb2, 0x01, 0x0a,
	0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x73,
	0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x46, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x06, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2a, 0x5f, 0x0a, 0x0c, 0x53, 0x65,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45,
	0x4d, 0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x4d,
	0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x4d, 0x45, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x45,
	0x52, 0x4d, 0x5f, 0x53, 0x50, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0xd1, 0x03, 0x0a, 0x0d,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x12, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x20, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x47, 0x52, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2d, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_grades_microservice_proto_rawDescOnce sync.Once
	file_grades_microservice_proto_rawDescData []byte
)

func file_grades_microservice_proto_rawDescGZIP() []byte {
	file_grades_microservice_proto_rawDescOnce.Do(func() {
		file_grades_microservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grades_microservice_proto_rawDesc), len(file_grades_microservice_proto_rawDesc)))
	})
	return file_grades_microservice_proto_rawDescData
}

var file_grades_microservice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grades_microservice_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_grades_microservice_proto_goTypes = []any{
	(SemesterTerm)(0),                      // 0: grades.SemesterTerm
	(*Semester)(nil),                       // 1: grades.Semester
	(*SingleGrade)(nil),                    // 2: grades.SingleGrade
	(*AddSingleGradeRequest)(nil),          // 3: grades.AddSingleGradeRequest
	(*AddSingleGradeResponse)(nil),         // 4: grades.AddSingleGradeResponse
	(*GetStudentCourseGradesRequest)(nil),  // 5: grades.GetStudentCourseGradesRequest
	(*GetStudentCourseGradesResponse)(nil), // 6: grades.GetStudentCourseGradesResponse
	(*UpdateSingleGradeRequest)(nil),       // 7: grades.UpdateSingleGradeRequest
	(*UpdateSingleGradeResponse)(nil),      // 8: grades.UpdateSingleGradeResponse
	(*RemoveSingleGradeRequest)(nil),       // 9: grades.RemoveSingleGradeRequest
	(*RemoveSingleGradeResponse)(nil),      // 10: grades.RemoveSingleGradeResponse
	(*GetCourseGradesRequest)(nil),         // 11: grades.GetCourseGradesRequest
	(*GetCourseGradesResponse)(nil),        // 12: grades.GetCourseGradesResponse
}
var file_grades_microservice_proto_depIdxs = []int32{
	0,  // 0: grades.Semester.term:type_name -> grades.SemesterTerm
	1,  // 1: grades.SingleGrade.semester:type_name -> grades.Semester
	1,  // 2: grades.AddSingleGradeRequest.semester:type_name -> grades.Semester
	2,  // 3: grades.AddSingleGradeResponse.grade:type_name -> grades.SingleGrade
	1,  // 4: grades.GetStudentCourseGradesRequest.semester:type_name -> grades.Semester
	2,  // 5: grades.GetStudentCourseGradesResponse.grades:type_name -> grades.SingleGrade
	1,  // 6: grades.UpdateSingleGradeRequest.semester:type_name -> grades.Semester
	2,  // 7: grades.UpdateSingleGradeResponse.grade:type_name -> grades.SingleGrade
	1,  // 8: grades.RemoveSingleGradeRequest.semester:type_name -> grades.Semester
	1,  // 9: grades.GetCourseGradesRequest.semester:type_name -> grades.Semester
	2,  // 10: grades.GetCourseGradesResponse.grades:type_name -> grades.SingleGrade
	11, // 11: grades.GradesService.GetCourseGrades:input_type -> grades.GetCourseGradesRequest
	5,  // 12: grades.GradesService.GetStudentCourseGrades:input_type -> grades.GetStudentCourseGradesRequest
	3,  // 13: grades.GradesService.AddSingleGrade:input_type -> grades.AddSingleGradeRequest
	7,  // 14: grades.GradesService.UpdateSingleGrade:input_type -> grades.UpdateSingleGradeRequest
	9,  // 15: grades.GradesService.RemoveSingleGrade:input_type -> grades.RemoveSingleGradeRequest
	12, // 16: grades.GradesService.GetCourseGrades:output_type -> grades.GetCourseGradesResponse
	6,  // 17: grades.GradesService.GetStudentCourseGrades:output_type -> grades.GetStudentCourseGradesResponse
	4,  // 18: grades.GradesService.AddSingleGrade:output_type -> grades.AddSingleGradeResponse
	8,  // 19: grades.GradesService.UpdateSingleGrade:output_type -> grades.UpdateSingleGradeResponse
	10, // 20: grades.GradesService.RemoveSingleGrade:output_type -> grades.RemoveSingleGradeResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_grades_microservice_proto_init() }
func file_grades_microservice_proto_init() {
	if File_grades_microservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grades_microservice_proto_rawDesc), len(file_grades_microservice_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grades_microservice_proto_goTypes,
		DependencyIndexes: file_grades_microservice_proto_depIdxs,
		EnumInfos:         file_grades_microservice_proto_enumTypes,
		MessageInfos:      file_grades_microservice_proto_msgTypes,
	}.Build()
	File_grades_microservice_proto = out.File
	file_grades_microservice_proto_goTypes = nil
	file_grades_microservice_proto_depIdxs = nil
}
